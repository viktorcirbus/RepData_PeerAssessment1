{
    "contents" : "\n#Loading and preprocessing the data\n\nactivity = read.csv(\"~/GitHub/RepData_PeerAssessment1/data/activity.csv\", stringsAsFactors=FALSE)\nactivity$date=as.Date(activity$date)\n\n#What is mean total number of steps taken per day?\n\n# 1.  Make a histogram of the total number of steps taken each day\n\nactivity.sums = aggregate(activity[c(\"steps\")], \n                           by = activity[c(\"date\")],\n                           FUN=sum, na.rm=TRUE)\n\nhist(activity.sums$steps, breaks = 50, main=\"histogram of the total number of steps taken each day\",xlab=\"Total number of steps taken each day\")\n\n\n# 2.  Calculate and report the mean and median total number of steps taken per day\n\n\n#Mean number of steps:\n\nmean(activity.sums$steps, na.rm = TRUE)\n\n#Median number of steps:\n\nmedian(activity.sums$steps, na.rm = TRUE)\n\n\n# What is the average daily activity pattern?\n\n#1.  Make a time series plot (i.e. type = \"l\") of the 5-minute interval (x-axis) and the average number of steps taken, averaged across all days (y-axis)\n\n\nactivity.intervals = aggregate(activity[c(\"steps\")], \n                           by = activity[c(\"interval\")],\n                           FUN=mean, na.rm=TRUE)\n\nplot(activity.intervals$interval,activity.intervals$steps,type=\"l\")\n\n#2.\tWhich 5-minute interval, on average across all the days in the dataset, contains the maximum number of steps?\n\nactivity.intervals[activity.intervals$steps == max(activity.intervals$steps), ]$interval\n\n# Imputing missing values\n\n# Note that there are a number of days/intervals where there are missing values (coded as NA). The presence of missing days may introduce bias into some calculations or summaries of the data.\n\n# 1.  Calculate and report the total number of missing values in the dataset (i.e. the total number of rows with NAs)\n\n\nlength(which(is.na(activity$steps)))\n\n\n\n# 2.\tDevise a strategy for filling in all of the missing values in the dataset. The strategy does not need to be sophisticated. For example, you could use the mean/median for that day, or the mean for that 5-minute interval, etc.\n\n# Mean for that 5-minute interval used for imputation\n\nfor(i in 1:nrow(activity)){\n  activity[i,c(\"imputed\")]=ifelse(is.na(activity[i,c(\"steps\")]),activity.intervals[activity.intervals$interval==activity[i,c(\"interval\")],]$steps,activity[i,c(\"steps\")])\n}\n\n\n#3.  Create a new dataset that is equal to the original dataset but with the missing data filled in.\n\nactivity2=activity[,c(\"imputed\",\"date\",\"interval\")]\ncolnames(activity2)[1] = \"steps\"\n\n\n#4.  \n\n#Make a histogram of the total number of steps taken each day and Calculate and report the mean and median \n#total number of steps taken per day. Do these values differ from the estimates from the first part of the assignment?\n#What is the impact of imputing missing data on the estimates of the total daily number of steps?\n\nactivity2.sums = aggregate(activity2[c(\"steps\")], \n                          by = activity2[c(\"date\")],\n                          FUN=sum)\n\nhist(activity2.sums$steps, breaks = 50, main=\"histogram of the total number of steps taken each day after imputation\",xlab=\"Total number of steps taken each day after imputation\")\n\n#Mean number of steps:\n\nmean(activity2.sums$steps)\n\n#Median number of steps:\n\nmedian(activity2.sums$steps)\n\n#Both the mean and the median are higher after using the imputed values in our calculation in comparison to the original data set.\n\n\n#Are there differences in activity patterns between weekdays and weekends?\n\n#For this part the weekdays() function may be of some help here. Use the dataset with the filled-in missing values for this part.\n#1.  Create a new factor variable in the dataset with two levels – “weekday” and “weekend” \n#indicating whether a given date is a weekday or weekend day.\n\n\nfor(i in 1:nrow(activity2)){\n  activity2[i,c(\"datetype\")]=ifelse(as.POSIXlt(activity2[i,c(\"date\")])$wday == 6,\"weekend\",ifelse(as.POSIXlt(activity2[i,c(\"date\")])$wday == 7,\"weekend\",\"weekday\"))\n}\n\nactivity2$datetype=as.factor(activity2$datetype)\n\n\n#2.\tMake a panel plot containing a time series plot (i.e. type = \"l\") of the 5-minute interval (x-axis) and the average number of steps taken,\n#averaged across all weekday days or weekend days (y-axis). See the README file in the GitHub repository to see \n#an example of what this plot should look like using simulated data.\n\nactivity2.datetype = aggregate(activity2[c(\"steps\")], \n                           by = activity2[c(\"interval\",\"datetype\")],\n                           FUN=mean)\n\nggplot(data = activity2.datetype, aes(x = interval, y = steps, color = datetype)) + \n  geom_line() + facet_wrap(~datetype, ncol = 1) + ylab(\"average number of steps taken\")\n\n\n",
    "created" : 1418293368157.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "3285368217",
    "id" : "B47FF546",
    "lastKnownWriteTime" : 1418371178,
    "path" : "~/GitHub/RepData_PeerAssessment1/script.R",
    "project_path" : "script.R",
    "properties" : {
        "tempName" : "Untitled1"
    },
    "source_on_save" : false,
    "type" : "r_source"
}